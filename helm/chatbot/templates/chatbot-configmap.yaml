apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "chatbot.fullname" . }}-configmap
data:
  zoo.cfg: |
    #
    # ZooKeeper configuration parameters
    #
    # server.0=zookeeper-0:2888:3888
    # server.1=zookeeper-1:2888:3888
    # server.2=zookeeper-2:2888:3888
    #
    4lw.commands.whitelist=srvr,dirs,ruok,stat,conf,isro,ok,envi,cons,crst,mntr,gtmk,srvr,dirs
    #
    standaloneEnabled=false
    admin.enableServer=true
    # The number of milliseconds of each tick
    tickTime=2000
    # The number of ticks that the initial 
    # synchronization phase can take
    initLimit=10
    # The number of ticks that can pass between 
    # sending a request and getting an acknowledgement
    syncLimit=5
    # the directory where the snapshot is stored.
    # do not use /tmp for storage, /tmp here is just 
    # example sakes.
    dataDir=/tmp/zookeeper
    # the port at which the clients will connect
    clientPort=2181
    # the maximum number of client connections.
    # increase this if you need to handle more clients
    maxClientCnxns=60
    #
    # Be sure to read the maintenance section of the 
    # administrator guide before turning on autopurge.
    #
    # https://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance
    #
    # The number of snapshots to retain in dataDir
    autopurge.snapRetainCount=3
    # Purge task interval in hours
    # Set to "0" to disable auto purge feature
    autopurge.purgeInterval=1

    ## Metrics Providers
    #
    # https://prometheus.io Metrics Exporter
    #metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider
    #metricsProvider.httpHost=0.0.0.0
    #metricsProvider.httpPort=7000
    #metricsProvider.exportJvmInfo=true
  logback.xml: |
    <configuration>
        <!-- Uncomment this if you would like to expose Logback JMX beans -->
        <!--jmxConfigurator /-->
        <property name="zookeeper.console.threshold" value="ERROR" />
        <property name="zookeeper.log.dir" value="." />
        <property name="zookeeper.log.file" value="zookeeper.log" />
        <property name="zookeeper.log.threshold" value="ERROR" />
        <property name="zookeeper.log.maxfilesize" value="256MB" />
        <property name="zookeeper.log.maxbackupindex" value="20" />
        <!--
        console
        Add "console" to root logger if you want to use this
        -->
        <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n</pattern>
            </encoder>
            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                <level>${zookeeper.console.threshold}</level>
            </filter>
        </appender>
        <!--
        Add ROLLINGFILE to root logger to get log file output
        -->
        <!--appender name="ROLLINGFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${zookeeper.log.dir}/${zookeeper.log.file}</File>
        <encoder>
            <pattern>%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${zookeeper.log.threshold}</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <maxIndex>${zookeeper.log.maxbackupindex}</maxIndex>
            <FileNamePattern>${zookeeper.log.dir}/${zookeeper.log.file}.%i</FileNamePattern>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>${zookeeper.log.maxfilesize}</MaxFileSize>
        </triggeringPolicy>
        </appender-->
        <!--
        Add TRACEFILE to root logger to get log file output
        Log TRACE level and above messages to a log file
        -->
        <!--property name="zookeeper.tracelog.dir" value="${zookeeper.log.dir}" />
        <property name="zookeeper.tracelog.file" value="zookeeper_trace.log" />
        <appender name="TRACEFILE" class="ch.qos.logback.core.FileAppender">
        <File>${zookeeper.tracelog.dir}/${zookeeper.tracelog.file}</File>
        <encoder>
            <pattern>%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>TRACE</level>
        </filter>
        </appender-->
        <!--
        zk audit logging
        -->
        <!--property name="zookeeper.auditlog.file" value="zookeeper_audit.log" />
        <property name="zookeeper.auditlog.threshold" value="ERROR" />
        <property name="audit.logger" value="ERROR, RFAAUDIT" />
        <appender name="RFAAUDIT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${zookeeper.log.dir}/${zookeeper.auditlog.file}</File>
        <encoder>
            <pattern>%d{ISO8601} %p %c{2}: %m%n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${zookeeper.auditlog.threshold}</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <maxIndex>10</maxIndex>
            <FileNamePattern>${zookeeper.log.dir}/${zookeeper.auditlog.file}.%i</FileNamePattern>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
        </appender>
        <logger name="org.apache.zookeeper.audit.Slf4jAuditLogger" additivity="false" level="${audit.logger}">
        <appender-ref ref="RFAAUDIT" />
        </logger-->
        <root level="ERROR">
            <appender-ref ref="CONSOLE" />
        </root>
    </configuration>
  configuration.xsl: |
    <?xml version="1.0"?>
    <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
        <xsl:output method="html"/>
        <xsl:template match="configuration">
            <html>
                <body>
                    <table border="1">
                        <tr>
                            <td>name</td>
                            <td>value</td>
                            <td>description</td>
                        </tr>
                        <xsl:for-each select="property">
                            <tr>
                                <td><a name="{name}"><xsl:value-of select="name"/></a></td>
                                <td><xsl:value-of select="value"/></td>
                                <td><xsl:value-of select="description"/></td>
                            </tr>
                        </xsl:for-each>
                    </table>
                </body>
            </html>
        </xsl:template>
    </xsl:stylesheet>
  ready-probe.sh: |
    #!/usr/bin/env bash
    OK=$(echo ruok | nc 127.0.0.1 $1)
    if [ "$OK" == "imok" ]; then
        exit 0
    else
        exit 1
    fi